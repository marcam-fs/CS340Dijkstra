Script started on Wed Aug 19 21:06:08 2020
[1m[7m%[27m[1m[0m                                                                                                                                                                        [0m[27m[24m[Jmariaazam@owners-MacBook-Pro CS340Dijkstra % [K[?2004hgg++ -c dijkstra.cpp[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                        [0m[27m[24m[Jmariaazam@owners-MacBook-Pro CS340Dijkstra % [K[?2004hgg++ dijkstra.o -o output[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                                                        [0m[27m[24m[Jmariaazam@owners-MacBook-Pro CS340Dijkstra % [K[?2004h../output[?2004l
Enter the number of vertices, to a maximum of 100: 5
Enter the number of edges: 6
Enter the source node, destination node, and weight as positive integers: 0 1 5
Enter the source node, destination node, and weight as positive integers: 0 2 3
Enter the source node, destination node, and weight as positive integers: 1 2 2
Enter the source node, destination node, and weight as positive integers: 2 3 7
Enter the source node, destination node, and weight as positive integers: 3 2 2
Enter the source node, destination node, and weight as positive integers: 3 4 6
Enter the node to find the shortest path from: 0
The least cost path from 0 to all other nodes is as follows:
Node   Cost
0      0
1      5
2      3
3      10
4      16
[1m[7m%[27m[1m[0m                                                                                                                                                                        [0m[27m[24m[Jmariaazam@owners-MacBook-Pro CS340Dijkstra % [K[?2004h,,.,  ../output[?2004l
Enter the number of vertices, to a maximum of 100: 6
Enter the number of edges: 9
Enter the source node, destination node, and weight as positive integers: 0 2 6
Enter the source node, destination node, and weight as positive integers: 0 1 1
Enter the source node, destination node, and weight as positive integers: 0 3 2
Enter the source node, destination node, and weight as positive integers: 1 2 1
Enter the source node, destination node, and weight as positive integers: 2 5 3
Enter the source node, destination node, and weight as positive integers: 2 4 1
Enter the source node, destination node, and weight as positive integers: 3 1 1
Enter the source node, destination node, and weight as positive integers: 3 4 7
Enter the source node, destination node, and weight as positive integers: 5 4 1
Enter the node to find the shortest path from: 0
The least cost path from 0 to all other nodes is as follows:
Node   Cost
0      0
1      1
2      2
3      2
4      3
5      5
[1m[7m%[27m[1m[0m                                                                                                                                                                        [0m[27m[24m[Jmariaazam@owners-MacBook-Pro CS340Dijkstra % [K[?2004heexit[?2004l

Script done on Wed Aug 19 21:08:50 2020
